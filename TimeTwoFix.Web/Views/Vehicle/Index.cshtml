@model IEnumerable<TimeTwoFix.Web.Models.VehicleModels.ReadVehicleViewModel>

@{
    ViewData["Title"] = "Vehicle List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <!-- Section Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="section-title text-primary fw-bold">
            <i class="bi bi-car-front me-2"></i> Vehicle Management
        </h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Add New Vehicle
        </a>
    </div>

    <!-- Statistics Summary -->
    <div class="alert alert-info mb-4">
        <div class="row">
            <div class="col-md-6">
                <i class="bi bi-car-front me-1"></i> Total Vehicles: @ViewBag.CountVehicle
            </div>
            <div class="col-md-6">
                <i class="bi bi-check-circle me-1"></i> Active Vehicles: @ViewBag.ActiveVehicle
            </div>
        </div>
    </div>

    <!-- TempData Alert -->
    @if (TempData["VehicleError"] != null)
    {
        <div class="alert alert-warning d-flex align-items-center mb-4">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <span>@TempData["VehicleError"]</span>
        </div>
    }

    <!-- Vehicles Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ClientId)</th>
                        <th>@Html.DisplayNameFor(model => model.Vin)</th>
                        <th>@Html.DisplayNameFor(model => model.Brand)</th>
                        <th>@Html.DisplayNameFor(model => model.Model)</th>
                        <th>@Html.DisplayNameFor(model => model.LicensePlate)</th>
                        <th>@Html.DisplayNameFor(model => model.FuelType)</th>
                        <th>@Html.DisplayNameFor(model => model.TransmissionType)</th>
                        <th>@Html.DisplayNameFor(model => model.Year)</th>
                        <th>@Html.DisplayNameFor(model => model.Mileage)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ClientId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Vin)</td>
                            <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                            <td>@Html.DisplayFor(modelItem => item.Model)</td>
                            <td>@Html.DisplayFor(modelItem => item.LicensePlate)</td>
                            <td>@Html.DisplayFor(modelItem => item.FuelType)</td>
                            <td>@Html.DisplayFor(modelItem => item.TransmissionType)</td>
                            <td>@Html.DisplayFor(modelItem => item.Year)</td>
                            <td>@Html.DisplayFor(modelItem => item.Mileage)</td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Details</a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center gap-3 mt-4">
        @{
            int currentPage = ViewBag.CurrentPage;
            int totalPages = ViewBag.TotalPages;
            int startPage = Math.Max(1, currentPage - 2);
            int endPage = Math.Min(totalPages, currentPage + 2);
        }

        @if (totalPages > 1)
        {
            <nav class="mt-4">
                <div class="overflow-auto">
                    <ul class="pagination justify-content-center flex-nowrap">

                        <!-- Previous -->
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)">Previous</a>
                        </li>

                        <!-- First page + ellipsis -->
                        @if (startPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="1">1</a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">…</span>
                            </li>
                        }

                        <!-- Page range -->
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                            </li>
                        }

                        <!-- Ellipsis + last page -->
                        @if (endPage < totalPages)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">…</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@totalPages">@totalPages</a>
                            </li>
                        }

                        <!-- Next -->
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)">Next</a>
                        </li>

                    </ul>
                </div>
            </nav>
        }
    </div>
</div>