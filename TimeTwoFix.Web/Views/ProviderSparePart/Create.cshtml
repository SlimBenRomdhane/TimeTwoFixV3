@model TimeTwoFix.Web.Models.ProviderSparePartModels.CreateProviderSparePartViewModel
@{
    ViewData["Title"] = "Create Provider Spare Part";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <!-- Header -->
    <h2 class="section-title text-primary fw-bold mb-2">
        <i class="bi bi-box-seam me-2"></i> Create Provider Spare Part
    </h2>
    <p class="text-muted mb-4">
        Please fill in the provider spare part details. Fields marked with <span class="text-danger">*</span> are required.
    </p>
    <!-- Form Card -->
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" novalidate>
                <!-- Validation Summary -->
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                <!-- Section: Provider Spare Part Info -->
                <div class="form-section mb-5">
                    <h5 class="form-section-header text-secondary mb-3">
                        <i class="bi bi-journals me-2"></i> Provider Spare Part Details
                    </h5>
                    <div class="mb-3">
                        <label class="form-label">Provider <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <input type="text" id="SelectedProviderName" class="form-control" placeholder="No provider selected" readonly />
                            <input type="hidden" asp-for="ProviderId" id="ProviderId" />
                            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#providerModal">
                                🔍 Search Provider
                            </button>
                        </div>
                        <span asp-validation-for="ProviderId" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Spare Part <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <input type="text" id="SelectedSparePartName" class="form-control" placeholder="No spare part selected" readonly />
                            <input type="hidden" asp-for="SparePartId" id="SparePartId" />
                            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#sparePartModal">
                                🔍 Search Spare Part
                            </button>
                        </div>
                        <span asp-validation-for="SparePartId" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="DeliveryReceipt" class="form-label">Delivery Receipt <span class="text-danger">*</span></label>
                        <input asp-for="DeliveryReceipt" class="form-control" />
                        <span asp-validation-for="DeliveryReceipt" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="QuantityReceived" class="form-label">Quantity Received <span class="text-danger">*</span></label>
                        <input asp-for="QuantityReceived" class="form-control" />
                        <span asp-validation-for="QuantityReceived" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="DateReceived" class="form-label">Date Received <span class="text-danger">*</span></label>
                        <input asp-for="DateReceived" class="form-control" />
                        <span asp-validation-for="DateReceived" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="UnitPriceAtPurchase" class="form-label">Unit Price at Purchase <span class="text-danger">*</span></label>
                        <input asp-for="UnitPriceAtPurchase" class="form-control" />
                        <span asp-validation-for="UnitPriceAtPurchase" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Discount" class="form-label">Discount</label>
                        <input asp-for="Discount" class="form-control" />
                        <span asp-validation-for="Discount" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="VAT" class="form-label">VAT</label>
                        <input asp-for="VAT" class="form-control" />
                        <span asp-validation-for="VAT" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Margin" class="form-label">Margin</label>
                        <input asp-for="Margin" class="form-control" />
                        <span asp-validation-for="Margin" class="text-danger"></span>
                    </div>
                </div>
                <!-- Submit Button -->
                <div class="d-grid">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="bi bi-check-circle me-1"></i> Create Provider Spare Part
                    </button>
                </div>
            </form>
        </div>
    </div>
    <!-- Back Link -->
    <div class="mt-4 text-center">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left-circle"></i> Back to Provider Spare Part List
        </a>
    </div>
</div>
<!-- Provider Search Modal -->
<div class="modal fade" id="providerModal" tabindex="-1" aria-labelledby="providerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="providerModalLabel">Search Providers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="providerSearchInput" class="form-control" placeholder="Type provider name..." />
                <div id="providerResults" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>
<!-- Spare Part Search Modal -->
<div class="modal fade" id="sparePartModal" tabindex="-1" aria-labelledby="sparePartModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sparePartModalLabel">Search Spare Parts</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="sparePartSearchInput" class="form-control" placeholder="Type spare part name or code..." />
                <div id="sparePartResults" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function setupSmartSearch(inputId, resultsId, endpoint, onSelect) {
            let debounceTimer;
            document.getElementById(inputId).addEventListener("input", function () {
                clearTimeout(debounceTimer);
                const term = this.value.trim();
                if (term.length < 2) return;
                debounceTimer = setTimeout(async () => {
                    const container = document.getElementById(resultsId);
                    container.innerHTML = `<div class="text-muted">Searching...</div>`;
                    try {
                        const response = await fetch(`${endpoint}?term=${encodeURIComponent(term)}`);
                        const results = await response.json();
                        container.innerHTML = "";
                        if (!Array.isArray(results) || results.length === 0) {
                            container.innerHTML = `<div class="alert alert-warning">No results for "<strong>${term}</strong>".</div>`;
                            return;
                        }
                        results.forEach(item => {
                            const btn = document.createElement("button");
                            btn.className = "btn btn-outline-primary mb-2 w-100 text-start";
                            // btn.textContent = item.name;
                            btn.textContent = `${item.name} (${item.code})`;
                            btn.onclick = () => onSelect(item);
                            container.appendChild(btn);
                        });
                    } catch (error) {
                        container.innerHTML = `<div class="alert alert-danger">Search failed. Try again.</div>`;
                        console.error(error);
                    }
                }, 300);
            });
        }
        setupSmartSearch("providerSearchInput", "providerResults", "/Provider/SearchProviders", item => {
            document.getElementById("ProviderId").value = item.id;
            document.getElementById("SelectedProviderName").value = item.name;
            bootstrap.Modal.getInstance(document.getElementById("providerModal")).hide();
        });
        setupSmartSearch("sparePartSearchInput", "sparePartResults", "/SparePart/SearchSpareParts", item => {
            document.getElementById("SparePartId").value = item.id;
            // document.getElementById("SelectedSparePartName").value = item.name;
            document.getElementById("SelectedSparePartName").value = `${item.name} (${item.code})`;
            bootstrap.Modal.getInstance(document.getElementById("sparePartModal")).hide();
        });
    </script>
}
