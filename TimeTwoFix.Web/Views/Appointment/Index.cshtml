@model IEnumerable<TimeTwoFix.Web.Models.AppointmentModels.ReadAppointmentViewModel>
@{
    ViewData["Title"] = "Appointments";
}

<div class="container my-5">

    <!-- Section Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="section-title text-primary fw-bold">
            <i class="bi bi-list-check me-2"></i> All Appointments
        </h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-calendar-plus me-1"></i> Create New
        </a>
    </div>

   
    <!-- Filter Accordion -->
    <div class="accordion mb-4" id="appointmentFilterAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="filterHeading">
                <button class="accordion-button collapsed fw-semibold" type="button"
                        data-bs-toggle="collapse" data-bs-target="#filterCollapse"
                        aria-expanded="false" aria-controls="filterCollapse">
                    <i class="bi bi-funnel-fill me-2 text-primary"></i> Filter Appointments
                </button>
            </h2>
            <div id="filterCollapse" class="accordion-collapse collapse" aria-labelledby="filterHeading"
                 data-bs-parent="#appointmentFilterAccordion">
                <div class="accordion-body">
                    <form method="post" asp-action="Index" class="row g-3 align-items-end">
                        <div class="col-md-4">
                            <label for="StartDate" class="form-label fw-semibold">Start Date</label>
                            <input type="date" name="StartDate" id="startDate"
                                   required
                                   value="@Context.Request.Query["startDate"]"
                                   class="form-control" />
                        </div>

                        <div class="col-md-4">
                            <label for="EndDate" class="form-label fw-semibold">End Date</label>
                            <input type="date" name="EndDate" id="endDate"
                                   required
                                   min="@Context.Request.Query["startDate"]"
                                   value="@Context.Request.Query["endDate"]"
                                   class="form-control" />
                        </div>

                        <div class="col-md-4">
                            <button type="submit" class="btn btn-outline-primary w-100">
                                <i class="bi bi-search me-1"></i> Filter
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Validation Message -->
    @if (TempData["AppointmentError"] != null)
    {
        <div class="alert alert-warning d-flex align-items-center mb-4">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <span>@TempData["AppointmentError"]</span>
        </div>
    }

    <!-- Appointments Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Contact</th>
                            <th>Phone</th>
                            <th>Urgency</th>
                            <th>Status</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Title</td>
                                <td>@item.Description</td>
                                <td>@item.AppointmentDate.ToString("dd MMM yyyy")</td>
                                <td>@item.AppointmentTime.ToString("HH:mm")</td>
                                <td>@item.ContactName</td>
                                <td>@item.ContactPhone</td>

                                <!-- Urgency Badge -->
                                <td>
                                    <span class="badge bg-@GetUrgencyColor(item.Urgency) text-capitalize px-3">@item.Urgency</span>
                                </td>

                                <!-- Status Badge -->
                                <td>
                                    <span class="badge rounded-pill text-bg-light border text-dark px-3">@item.Status</span>
                                </td>

                                <!-- Action Buttons -->
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-warning" })
                                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-info" })
                                        @if (User.IsInRole("GeneralManager"))
                                        {
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetUrgencyColor(string urgency)
    {
        return urgency?.ToLowerInvariant() switch
        {
            "low" => "secondary",
            "medium" => "info",
            "high" => "warning",
            "critical" => "danger",
            _ => "light"
        };
    }
}