@using System.Security.Claims;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TimeTwoFix.Web</title>
    
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/TimeTwoFix.Web.styles.css" asp-append-version="true" />
    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet"> *@
    
</head>
<body>
   
    <div class="main-wrapper">
        <header>
            @if (User.Identity.IsAuthenticated)
            { 
            <nav class="navbar navbar-expand-sm navbar-dark bg-dark border-bottom box-shadow mb-3">
                <div class="container">
                    <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">TimeTwoFix</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link text-light" asp-controller="Home" asp-action="Index"><i class="fas fa-home"></i> Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-light" asp-controller="Home" asp-action="Privacy"><i class="fas fa-shield-alt"></i> Privacy</a>
                            </li>
                                
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle text-light" data-bs-toggle="dropdown">
                                        <i class="fas fa-chart-line"></i> Insights
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li class="dropdown-header">Performance</li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="MechanicPerformance"><i class="fas fa-user-gear"></i> Mechanics</a></li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="PauseAnalysis"><i class="fas fa-clock"></i> Time Analysis</a></li>
                                        
                                        <li class="dropdown-header">Business</li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="TopCustomers"><i class="fas fa-users"></i> Clients</a></li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="TopConsumedParts"><i class="fas fa-box-open"></i> Parts</a></li>

                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="PaymentAging"><i class="fas fa-building"></i>Unpaid Work Orders</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" asp-controller="Reporting" asp-action="RevenueByMonth"><i class="fas fa-building"></i>Turnover</a></li>
                                    </ul>
                                </li>
                                @if (User.IsInRole("GeneralManager"))
                                {
                                    <li class="nav-item dropdown">
                                        <a class="nav-link dropdown-toggle text-light" data-bs-toggle="dropdown">
                                            <i class="fas fa-tools"></i> Settings
                                        </a>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" asp-controller="Category" asp-action="Index"><i class="fas fa-calendar-check"></i>Service Categories</a></li>
                                            <li><a class="dropdown-item" asp-controller="ProvidedService" asp-action="Index"><i class="fas fa-truck"></i>Provides Services</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" asp-controller="LiftingBridge" asp-action="Index"><i class="fas fa-building"></i> Bridges</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" asp-controller="User" asp-action="Index"><i class="fas fa-building"></i> User Management</a></li>
                                        </ul>
                                    </li>
                                }
                                @if ((User.IsInRole("GeneralManager")) || (User.IsInRole("FrontDeskAssistant")))
                                {
                                    <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-light" data-bs-toggle="dropdown">
                                    <i class="fas fa-tools"></i> Workshop Management
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" asp-controller="Client" asp-action="Index"><i class="fas fa-calendar-check"></i> Clients</a></li>
                                    <li><a class="dropdown-item" asp-controller="Vehicle" asp-action="Index"><i class="fas fa-truck"></i> Vehicles</a></li>
                                    <li><a class="dropdown-item" asp-controller="Appointment" asp-action="Index"><i class="fas fa-calendar-check"></i> Appointments</a></li>
                                    
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="WorkOrder" asp-action="Index"><i class="fas fa-file-alt"></i> Work Orders</a></li>
                                    <li><a class="dropdown-item" asp-controller="Intervention" asp-action="Index"><i class="fas fa-history"></i> Interventions</a></li>
                                </ul>
                            </li>
                                }
                                @if ((User.IsInRole("GeneralManager")) || (User.IsInRole("WareHouseManager")) || (User.IsInRole("WorkshopManager")))
                                {
                                    <li class="nav-item dropdown">
                                        <a class="nav-link dropdown-toggle text-light" data-bs-toggle="dropdown">
                                            <i class="fas fa-tools"></i> Stock Management
                                        </a>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" asp-controller="Provider" asp-action="Index"><i class="fas fa-calendar-check"></i>Providers</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" asp-controller="SparePartCategory" asp-action="Index"><i class="fas fa-calendar-check"></i> Spare Part Categories</a></li>
                                            <li><a class="dropdown-item" asp-controller="SparePart" asp-action="Index"><i class="fas fa-calendar-check"></i>Spare Parts</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" asp-controller="ProviderSparePart" asp-action="Index"><i class="fas fa-calendar-check"></i>Stock Supplies</a></li>
                                            <li><a class="dropdown-item" asp-controller="InterventionSparePart" asp-action="Index"><i class="fas fa-calendar-check"></i>Stock Withdrawals</a></li>
                                        </ul>
                                    </li>
                                }
                                
                           
                        </ul>
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-light" data-bs-toggle="dropdown">
                                    <i class="fas fa-user-circle"></i> @User.Identity.Name
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" asp-controller="User" asp-action="Profile"
                                           asp-route-email="@User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value">
                                            <i class="fas fa-user"></i> Profile
                                        </a>
                                    </li>
                                    <li><a class="dropdown-item" asp-controller="User" asp-action="Settings"><i class="fas fa-cog"></i> Settings</a></li>
                                    <li><a class="dropdown-item" asp-controller="User" asp-action="Activity"><i class="fas fa-clock"></i> Activity</a></li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li>
                                        <form asp-controller="User" asp-action="Logout" method="post">
                                            <button type="submit" class="dropdown-item"><i class="fas fa-sign-out-alt"></i> Logout</button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
            }
        </header>

        <main class="main-content">
            @RenderBody()
        </main>
        <!-- Container for dynamic chat popups -->
        <div id="chatContainer"
             class="position-fixed bottom-0 end-0 p-3 d-flex flex-row-reverse gap-2 align-items-end"
             style="z-index:1055;">

            <div id="userSelector" class="mb-2">
                Loading users...
            </div>
        </div>
        <footer class="site-footer">
           

            <div class="footer-inner">
                &copy; @DateTime.Now.Year - TimeTwoFix.Web -
                <a asp-controller="Home" asp-action="Privacy">Privacy</a>
            </div>
           
        </footer>
       
    </div>
    <!-- Toast Container -->
    <button id="clear-toasts-btn"
            type="button"
            class="btn btn-sm btn-danger position-fixed top-0 end-0 mt-5 me-3"
            style="z-index: 2000; display: none;">
        <i class="bi bi-x-circle me-1"></i> Clear All Notifications
    </button>
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container position-fixed top-0 end-0 p-3 z-3">
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="toast align-items-center text-bg-success border-0 show"
                     role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto"
                                data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="toast align-items-center text-bg-danger border-0 show"
                     role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto"
                                data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }
        </div>
        <div id="signalr-toast-container" class="toast-container position-fixed top-0 end-0 p-3 z-3"></div>
        
    </div>
    
    
    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script> *@
    @* <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> *@
    <script src="~/lib/signalr/signalr.min.js" asp-append-version="true"></script>
    <script src="~/lib/chartjs/chart.min.js"></script>

    <script>
        const interventionConnection = new signalR.HubConnectionBuilder()
            .withUrl("/interventionHub")
            .build();

               interventionConnection.on("ReceiveInterventionUpdate", (id, status) => {
            const toastHtml = `
                <div class="toast align-items-center text-bg-info border-0 show mb-2" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi bi-info-circle-fill me-2"></i>
                            Intervention <strong>#${id}</strong> is now <strong>${status}</strong>.
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            document.getElementById("signalr-toast-container").insertAdjacentHTML("beforeend", toastHtml);
            document.getElementById("clear-toasts-btn").style.display = "block";

        });

        interventionConnection.start().catch(err => console.error(err));
    </script>
    <script>
        const stockConnection = new signalR.HubConnectionBuilder()
            .withUrl("/sparePartHub")
            .build();

        stockConnection.on("ReceiveStockAlert", (message) => {
            const toastHtml = `
                <div class="toast align-items-center text-bg-warning border-0 show mb-2" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            document.getElementById("signalr-toast-container").insertAdjacentHTML("beforeend", toastHtml);
            document.getElementById("clear-toasts-btn").style.display = "block";

        });

        stockConnection.start().catch(err => console.error(err));
    </script>
    <script>
               // Hide the button when all toasts are gone
        const container = document.getElementById("signalr-toast-container");
        const clearBtn = document.getElementById("clear-toasts-btn");

        const observer = new MutationObserver(() => {
            clearBtn.style.display = container.children.length > 0 ? "block" : "none";
        });

        observer.observe(container, { childList: true });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
          const container = document.getElementById("signalr-toast-container");
          const clearBtn = document.getElementById("clear-toasts-btn");

          if (!container || !clearBtn) {
            console.error("Toast container or clear button not found.");
            return;
          }

          // Click handler
          clearBtn.addEventListener("click", (e) => {
            e.preventDefault();
            // Remove all toasts
            while (container.firstChild) container.removeChild(container.firstChild);
            // Hide button
            clearBtn.style.display = "none";
          });

          // Auto-show/hide button when toasts added/removed
          const observer = new MutationObserver(() => {
            clearBtn.style.display = container.children.length > 0 ? "block" : "none";
          });
          observer.observe(container, { childList: true });
        });
    </script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        // Incoming messages
        connection.on("ReceiveMessage", (userId, senderName, message) => {
            createChatPopup(userId, senderName);

            const chatBox = document.getElementById(`chatBox-${userId}`);
            const msg = document.createElement("div");
            msg.classList.add("mb-1");
            msg.innerHTML = `<strong>${senderName}:</strong> ${message}`;
            chatBox.appendChild(msg);
            chatBox.scrollTop = chatBox.scrollHeight;
        });

        connection.start().catch(err => console.error(err.toString()));

        // Open popup for selected user
        function openSelectedChat() {
            const select = document.getElementById("receiverSelect");
            const userId = select.value;
            const displayName = select.options[select.selectedIndex].text;
            if (userId) {
                createChatPopup(userId, displayName);
            }
        }

        // Create popup dynamically
        function createChatPopup(userId, displayName) {
            if (document.getElementById(`chatPopup-${userId}`)) return;

            const popup = document.createElement("div");
            popup.id = `chatPopup-${userId}`;
            popup.classList.add("card", "shadow-sm", "border-0");
            popup.style.width = "320px";

            popup.innerHTML = `
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <span><i class="bi bi-chat-dots-fill me-2"></i>${displayName}</span>
                    <button type="button" class="btn-close btn-close-white" onclick="closeChat('${userId}')"></button>
                </div>
                <div class="card-body p-2" style="height:220px; overflow-y:auto;" id="chatBox-${userId}"></div>
                <div class="card-footer bg-light">
                    <div class="input-group input-group-sm">
                        <input type="text" id="messageInput-${userId}" class="form-control" placeholder="Type a message..." />
                        <button class="btn btn-primary" onclick="sendMessage('${userId}')">Send</button>
                    </div>
                </div>
            `;

            document.getElementById("chatContainer").appendChild(popup);

            // Autofocus input when popup opens
            document.getElementById(`messageInput-${userId}`).focus();
        }

        // Close popup
        function closeChat(userId) {
            const popup = document.getElementById(`chatPopup-${userId}`);
            if (popup) popup.remove();
        }

        // Send message
        function sendMessage(receiverUserName) {
            const input = document.getElementById(`messageInput-${receiverUserName}`);
            const message = input.value;
            if (message.trim()) {
                connection.invoke("SendMessage", receiverUserName, message);
                input.value = "";
            }
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", loadChatUsers);

        async function loadChatUsers() {
            try {
                const response = await fetch('/Chat/UserList');
                const html = await response.text();
                document.getElementById("userSelector").innerHTML = html;
            } catch (err) {
                console.error("Failed to load users", err);
            }
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)
    
</body>
</html>
