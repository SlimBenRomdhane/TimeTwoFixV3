@model IEnumerable<TimeTwoFix.Web.Models.ReportingModels.ServiceCategoryViewModel>

@{
    ViewData["Title"] = "Revenue by Service Category";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>üîß Revenue by Service Category</h2>
            <p class="lead">Breakdown of revenue generated by different service categories</p>
        </div>
    </div>

    <!-- Date filter form -->
    <form asp-action="ServiceCategory" method="get" class="row g-3 mb-4">
        <div class="col-auto">
            <label for="from" class="form-label">From</label>
            <input type="date" id="from" name="from" class="form-control" value="@ViewData["From"]" />
        </div>
        <div class="col-auto">
            <label for="to" class="form-label">To</label>
            <input type="date" id="to" name="to" class="form-control" value="@ViewData["To"]" />
        </div>
        <div class="col-auto align-self-end">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </form>

    @if (Model != null && Model.Any())
    {
        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@Model.Count()</h4>
                                <p class="card-text">Service Categories</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-tags fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@Model.Sum(x => x.TotalRevenue).ToString("N0")</h4>
                                <p class="card-text">Total Revenue</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-dollar-sign fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
             <div class="col-md-4">
                 <div class="card bg-info text-white">
                     <div class="card-body">
                         <div class="d-flex justify-content-between">
                             <div>
                                 <h4 class="card-title">@Model.Sum(x => x.WorkOrderCount)</h4>
                                 <p class="card-text">Total Work Orders</p>
                             </div>
                             <div class="align-self-center">
                                 <i class="fas fa-wrench fa-2x"></i>
                             </div>
                         </div>
                     </div>
                 </div>
             </div>
        </div>

        <!-- Data Table -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">üìä Service Category Breakdown</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Category</th>
                                         <th>Work Orders Count</th>
                                        <th>Total Revenue</th>
                                        <th>Average Revenue</th>
                                        <th>Revenue %</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in Model.OrderByDescending(x => x.TotalRevenue))
                                    {
                                        var revenuePercentage = Model.Sum(x => x.TotalRevenue) > 0 
                                            ? (category.TotalRevenue / Model.Sum(x => x.TotalRevenue)) * 100 
                                            : 0;
                                        
                                        <tr>
                                            <td>
                                                <strong>@category.CategoryName</strong>
                                                @if (!string.IsNullOrEmpty(category.CategoryName))
                                                {
                                                    <br><small class="text-muted">@category.CategoryName</small>
                                                }
                                            </td>
                                             <td>
                                                 <span class="badge bg-primary">@category.WorkOrderCount</span>
                                             </td>
                                             <td>
                                                 <strong class="text-success">@category.TotalRevenue.ToString("N0")</strong>
                                             </td>
                                             <td>
                                                 @(category.WorkOrderCount > 0 ? (category.TotalRevenue / category.WorkOrderCount).ToString("N0") : "0")
                                             </td>
                                            <td>
                                                <div class="progress" style="height: 20px;">
                                                    <div class="progress-bar bg-success" 
                                                         role="progressbar" 
                                                         style="width: @revenuePercentage.ToString("F1")%" 
                                                         aria-valuenow="@revenuePercentage" 
                                                         aria-valuemin="0" 
                                                         aria-valuemax="100">
                                                        @revenuePercentage.ToString("F1")%
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-info" 
                                                        onclick="showCategoryDetails('@category.CategoryName', @category.WorkOrderCount, @category.TotalRevenue)">
                                                    <i class="fas fa-eye"></i> Details
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">üìä Revenue Distribution</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="revenueChart" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">üìà Service Count by Category</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="serviceCountChart" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Performers -->
        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">üèÜ Top Revenue Generators</h5>
                    </div>
                    <div class="card-body">
                        <ol class="list-group list-group-numbered">
                            @foreach (var category in Model.OrderByDescending(x => x.TotalRevenue).Take(5))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">@category.CategoryName</div>
                                         <small class="text-muted">@category.WorkOrderCount work orders</small>
                                    </div>
                                    <span class="badge bg-success rounded-pill">@category.TotalRevenue.ToString("N0")</span>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">üìä Most Popular Services</h5>
                    </div>
                    <div class="card-body">
                        <ol class="list-group list-group-numbered">
                            @foreach (var category in Model.OrderByDescending(x => x.WorkOrderCount).Take(5))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">@category.CategoryName</div>
                                         <small class="text-muted">@(category.WorkOrderCount > 0 ? (category.TotalRevenue / category.WorkOrderCount).ToString("N0") : "0") avg. revenue</small>
                                    </div>
                                    <span class="badge bg-primary rounded-pill">@category.WorkOrderCount</span>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <h4>No Data Available</h4>
            <p>No service category data found for the selected date range. Try adjusting your filter criteria.</p>
        </div>
    }
</div>

<!-- Category Details Modal -->
<div class="modal fade" id="categoryDetailsModal" tabindex="-1" aria-labelledby="categoryDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryDetailsModalLabel">Category Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="categoryDetailsContent">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/chartjs/chart.min.js"></script>
    <script>
        @if (Model != null && Model.Any())
        {
            <text>
            const categoryData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
            
            // Revenue Distribution Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            new Chart(revenueCtx, {
                type: 'pie',
                data: {
                    labels: categoryData.map(c => c.categoryName),
                    datasets: [{
                        data: categoryData.map(c => c.totalRevenue),
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', 
                            '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'
                        ],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Revenue by Service Category'
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Service Count Chart
            const serviceCountCtx = document.getElementById('serviceCountChart').getContext('2d');
            new Chart(serviceCountCtx, {
                type: 'bar',
                data: {
                    labels: categoryData.map(c => c.categoryName),
                    datasets: [{
                         label: 'Work Order Count',
                         data: categoryData.map(c => c.workOrderCount),
                        backgroundColor: '#36A2EB',
                        borderColor: '#36A2EB',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Work Order Count by Category'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

             function showCategoryDetails(categoryName, workOrderCount, totalRevenue) {
                 const modal = new bootstrap.Modal(document.getElementById('categoryDetailsModal'));
                 const content = document.getElementById('categoryDetailsContent');
                 
                 content.innerHTML = `
                     <h6>Category: ${categoryName}</h6>
                     <p><strong>Work Order Count:</strong> ${workOrderCount}</p>
                     <p><strong>Total Revenue:</strong> ${totalRevenue.toLocaleString()}</p>
                     <p><strong>Average Revenue per Work Order:</strong> ${workOrderCount > 0 ? (totalRevenue / workOrderCount).toFixed(2) : '0'}</p>
                 `;
                 
                 modal.show();
             }
            </text>
        }
    </script>
}
