@model IEnumerable<TimeTwoFix.Web.Models.ReportingModels.VehicleInsightViewModel>

@{
    ViewData["Title"] = "Vehicle Insights";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>🚗 Vehicle Insights</h2>
            <p class="lead">Analysis of vehicle service patterns and maintenance frequency</p>
        </div>
    </div>

    <!-- Date filter form -->
    <form asp-action="VehicleInsight" method="get" class="row g-3 mb-4">
        <div class="col-auto">
            <label for="from" class="form-label">From</label>
            <input type="date" id="from" name="from" class="form-control" value="@ViewData["From"]" />
        </div>
        <div class="col-auto">
            <label for="to" class="form-label">To</label>
            <input type="date" id="to" name="to" class="form-control" value="@ViewData["To"]" />
        </div>
        <div class="col-auto align-self-end">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </form>

    @if (Model != null && Model.Any())
    {
        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@Model.Count()</h4>
                                <p class="card-text">Vehicles Analyzed</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-car fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@Model.Sum(x => x.WorkOrderCount)</h4>
                                <p class="card-text">Total Work Orders</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-wrench fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@Model.Sum(x => x.TotalRevenue).ToString("N0")</h4>
                                <p class="card-text">Total Revenue</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-dollar-sign fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="card-title">@(Model.Count() > 0 ? (Model.Sum(x => x.WorkOrderCount) / (double)Model.Count()).ToString("F1") : "0")</h4>
                                <p class="card-text">Avg. Work Orders per Vehicle</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-chart-bar fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Data Table -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">📊 Vehicle Service Analysis</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Vehicle</th>
                                        <th>Owner</th>
                                        <th>Work Order Count</th>
                                        <th>Total Revenue</th>
                                        <th>Avg. Revenue</th>
                                        <th>Last Service</th>
                                        <th>Service Frequency</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var vehicle in Model.OrderByDescending(x => x.WorkOrderCount))
                                    {
                                        var serviceFrequency = vehicle.WorkOrderCount > 0 ? "High" : "Low";
                                        var frequencyClass = vehicle.WorkOrderCount >= 5 ? "success" : vehicle.WorkOrderCount >= 3 ? "warning" : "danger";
                                        
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong>@vehicle.Brand @vehicle.Model</strong>
                                                    <br><small class="text-muted">@vehicle.LicensePlate</small>
                                                    <br><small class="text-info">VIN: @vehicle.Vin</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@vehicle.OwnerName</strong>
                                                    @if (!string.IsNullOrEmpty(vehicle.OwnerPhone))
                                                    {
                                                        <br><small class="text-muted"><i class="fas fa-phone"></i> @vehicle.OwnerPhone</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@vehicle.WorkOrderCount</span>
                                            </td>
                                            <td>
                                                <strong class="text-success">@vehicle.TotalRevenue.ToString("N0")</strong>
                                            </td>
                                            <td>
                                                @(vehicle.WorkOrderCount > 0 ? (vehicle.TotalRevenue / vehicle.WorkOrderCount).ToString("N0") : "0")
                                            </td>
                                            <td>
                                                @if (vehicle.LastServiceDate.HasValue)
                                                {
                                                    <span class="text-info">@vehicle.LastServiceDate.Value.ToString("MMM dd, yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No services</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-@frequencyClass">@serviceFrequency</span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-info" 
                                                        onclick="showVehicleDetails('@vehicle.Brand @vehicle.Model', '@vehicle.OwnerName', @vehicle.WorkOrderCount, @vehicle.TotalRevenue, '@vehicle.LastServiceDate')">
                                                    <i class="fas fa-eye"></i> Details
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">📊 Service Count by Vehicle</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="serviceCountChart" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">💰 Revenue by Vehicle</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="revenueChart" width="400" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vehicle Categories -->
        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">🏆 Most Serviced Vehicles</h5>
                    </div>
                    <div class="card-body">
                        <ol class="list-group list-group-numbered">
                            @foreach (var vehicle in Model.OrderByDescending(x => x.WorkOrderCount).Take(5))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">@vehicle.Brand @vehicle.Model</div>
                                        <small class="text-muted">@vehicle.VIN - @vehicle.OwnerName</small>
                                    </div>
                                    <span class="badge bg-primary rounded-pill">@vehicle.WorkOrderCount</span>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">💰 Highest Revenue Vehicles</h5>
                    </div>
                    <div class="card-body">
                        <ol class="list-group list-group-numbered">
                            @foreach (var vehicle in Model.OrderByDescending(x => x.TotalRevenue).Take(5))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">@vehicle.Brand @vehicle.Model</div>
                                        <small class="text-muted">@vehicle.WorkOrderCount work orders</small>
                                    </div>
                                    <span class="badge bg-success rounded-pill">@vehicle.TotalRevenue.ToString("N0")</span>
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <!-- Brand Analysis -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">🏭 Brand Analysis</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var brandGroup in Model.GroupBy(x => x.Brand).OrderByDescending(g => g.Sum(x => x.ServiceCount)))
                            {
                                <div class="col-md-4 mb-3">
                                    <div class="card border-primary">
                                        <div class="card-body">
                                            <h6 class="card-title">@brandGroup.Key</h6>
                                            <p class="card-text">
                                                <strong>Vehicles:</strong> @brandGroup.Count()<br>
                                                <strong>Services:</strong> @brandGroup.Sum(x => x.ServiceCount)<br>
                                                <strong>Revenue:</strong> @brandGroup.Sum(x => x.TotalRevenue).ToString("N0")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Customer Insights -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">👥 Customer Insights & Recommendations</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="alert alert-info">
                                    <h6><i class="fas fa-star"></i> VIP Customers</h6>
                                    <p class="mb-0">
                                        @{
                                            var vipCustomers = Model.Where(x => x.WorkOrderCount >= 5).Count();
                                        }
                                        @vipCustomers customers have 5+ services. Consider loyalty programs for these high-value customers.
                                    </p>
                                </div>
                            </div>
                            
                            <div class="col-md-4">
                                <div class="alert alert-warning">
                                    <h6><i class="fas fa-clock"></i> Service Frequency</h6>
                                    <p class="mb-0">
                                        @{
                                            var avgServices = Model.Average(x => x.WorkOrderCount);
                                        }
                                        Average @avgServices.ToString("F1") services per vehicle. Monitor low-frequency customers for retention opportunities.
                                    </p>
                                </div>
                            </div>
                            
                            <div class="col-md-4">
                                <div class="alert alert-success">
                                    <h6><i class="fas fa-chart-line"></i> Revenue Potential</h6>
                                    <p class="mb-0">
                                        @{
                                            var highValueVehicles = Model.Where(x => x.TotalRevenue >= (decimal)(Model.Average(y => (double)y.TotalRevenue) * 1.5)).Count();
                                        }
                                        @highValueVehicles vehicles generate above-average revenue. Focus on similar vehicle types.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <h4>No Data Available</h4>
            <p>No vehicle service data found for the selected date range. Try adjusting your filter criteria.</p>
        </div>
    }
</div>

<!-- Vehicle Details Modal -->
<div class="modal fade" id="vehicleDetailsModal" tabindex="-1" aria-labelledby="vehicleDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="vehicleDetailsModalLabel">Vehicle Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="vehicleDetailsContent">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/chartjs/chart.min.js"></script>
    <script>
        @if (Model != null && Model.Any())
        {
            <text>
            const vehicleData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
            
            // Service Count Chart
            const serviceCountCtx = document.getElementById('serviceCountChart').getContext('2d');
            new Chart(serviceCountCtx, {
                type: 'bar',
                data: {
                    labels: vehicleData.map(v => `${v.brand} ${v.model}`),
                    datasets: [{
                        label: 'Work Order Count',
                        data: vehicleData.map(v => v.workOrderCount),
                        backgroundColor: '#36A2EB',
                        borderColor: '#36A2EB',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Work Order Count by Vehicle'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            new Chart(revenueCtx, {
                type: 'bar',
                data: {
                    labels: vehicleData.map(v => `${v.brand} ${v.model}`),
                    datasets: [{
                        label: 'Total Revenue',
                        data: vehicleData.map(v => v.totalRevenue),
                        backgroundColor: '#28a745',
                        borderColor: '#28a745',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Revenue by Vehicle'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            function showVehicleDetails(brandModel, ownerName, workOrderCount, totalRevenue, lastServiceDate) {
                const modal = new bootstrap.Modal(document.getElementById('vehicleDetailsModal'));
                const content = document.getElementById('vehicleDetailsContent');
                
                const lastService = lastServiceDate ? new Date(lastServiceDate).toLocaleDateString() : 'No services';
                
                content.innerHTML = `
                    <h6>Vehicle: ${brandModel}</h6>
                    <p><strong>Owner:</strong> ${ownerName}</p>
                    <p><strong>Work Order Count:</strong> ${workOrderCount}</p>
                    <p><strong>Total Revenue:</strong> ${totalRevenue.toLocaleString()}</p>
                    <p><strong>Average Revenue per Work Order:</strong> ${workOrderCount > 0 ? (totalRevenue / workOrderCount).toFixed(2) : '0'}</p>
                    <p><strong>Last Service:</strong> ${lastService}</p>
                `;
                
                modal.show();
            }
            </text>
        }
    </script>
}
